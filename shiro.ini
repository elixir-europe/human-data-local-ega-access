[main]
#Fallback
#ds = org.apache.commons.dbcp2.BasicDataSource 
#ds.driverClassName = com.mysql.jdbc.Driver 
#ds.username = scrbt_dwload
#ds.password = downloading_robot
#ds.url = jdbc:mysql://pg-mysql-vault-ega-drupal:4357/prod_ega7_ebi_ac_uk_ega_admin 

# Authentication
ds2 = com.zaxxer.hikari.HikariDataSource
ds2.driverClassName = com.mysql.jdbc.Driver 
ds2.username = scrbt_dwload
ds2.password = downloading_robot
ds2.jdbcUrl = jdbc:mysql://pg-mysql-vault-ega-drupal:4357/prod_ega7_ebi_ac_uk_ega_admin 

# Authorization
ds3 = com.zaxxer.hikari.HikariDataSource
ds3.driverClassName = com.mysql.jdbc.Driver 
ds3.username = scrbt_dwload
ds3.password = downloading_robot
ds3.jdbcUrl = jdbc:mysql://pg-mysql-vault-ega-drupal:4357/prod_ega_accounts 

#Use my own PasswordService to match Password to Drupal 7 hash
passwordMatcher = org.apache.shiro.authc.credential.PasswordMatcher
passwordService = uk.ac.embl.ebi.ega.accessservice.utils.DrupalPasswordService
passwordMatcher.passwordService = $passwordService

# Authentication
#jdbcRealm = org.apache.shiro.realm.jdbc.JdbcRealm 
jdbcRealm = uk.ac.embl.ebi.ega.accessservice.utils.AuTNJdbcRealm 
jdbcRealm.permissionsLookupEnabled = false 
jdbcRealm.authenticationQuery = SELECT pass FROM users WHERE mail = ? and status = 1
jdbcRealm.credentialsMatcher = $passwordMatcher
jdbcRealm.dataSource = $ds2

# Authorization - Custom JDBC Realm that denies Authentication attempts
jdbcRealm2 = uk.ac.embl.ebi.ega.accessservice.utils.AuZNJdbcRealm 
jdbcRealm2.permissionsLookupEnabled = true 
jdbcRealm2.userRolesQuery = SELECT DISTINCT a.dataset_stable_id FROM account_permissions a, account b WHERE b.stable_id = a.account_stable_id AND a.status = 'approved' AND b.email = ? ORDER BY a.dataset_stable_id; 
jdbcRealm2.permissionsQuery = SELECT DISTINCT c.stable_id FROM file c WHERE c.dataset_stable_id = ? AND (c.status = 'available' OR c.status = 'pending') ORDER BY c.stable_id;
jdbcRealm2.dataSource = $ds3

#builtInCacheManager = org.apache.shiro.cache.MemoryConstrainedCacheManager
builtInCacheManager = org.apache.shiro.cache.ehcache.EhCacheManager
securityManager.cacheManager = $builtInCacheManager

sessionDAO = org.apache.shiro.session.mgt.eis.EnterpriseCacheSessionDAO
sessionManager=org.apache.shiro.session.mgt.DefaultSessionManager
sessionManager.sessionDAO = $sessionDAO

sessionManager.globalSessionTimeout = 600000
sessionValidationScheduler = org.apache.shiro.session.mgt.ExecutorServiceSessionValidationScheduler
sessionValidationScheduler.interval = 600000
sessionManager.sessionValidationScheduler = $sessionValidationScheduler

securityManager.sessionManager=$sessionManager

#authcStrategy = org.apache.shiro.authc.pam.FirstSuccessfulStrategy
#securityManager.authenticator.authenticationStrategy = $authcStrategy

securityManager.realms = $jdbcRealm, $jdbcRealm2